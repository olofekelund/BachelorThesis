/*
* generated by Xtext
*/
grammar InternalReqLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.language.services.ReqLanguageGrammarAccess;

}

@parser::members {
 
 	private ReqLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ReqLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getRequirementsAssignment()); }
(rule__Model__RequirementsAssignment)*
{ after(grammarAccess.getModelAccess().getRequirementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirement
entryRuleRequirement 
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementAccess().getGroup()); }
(rule__Requirement__Group__0)
{ after(grammarAccess.getRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReqID
entryRuleReqID 
:
{ before(grammarAccess.getReqIDRule()); }
	 ruleReqID
{ after(grammarAccess.getReqIDRule()); } 
	 EOF 
;

// Rule ReqID
ruleReqID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReqIDAccess().getGroup()); }
(rule__ReqID__Group__0)
{ after(grammarAccess.getReqIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefix
entryRulePrefix 
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixAccess().getGroup()); }
(rule__Prefix__Group__0)
{ after(grammarAccess.getPrefixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixRightOperand
entryRulePrefixRightOperand 
:
{ before(grammarAccess.getPrefixRightOperandRule()); }
	 rulePrefixRightOperand
{ after(grammarAccess.getPrefixRightOperandRule()); } 
	 EOF 
;

// Rule PrefixRightOperand
rulePrefixRightOperand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getGroup()); }
(rule__PrefixRightOperand__Group__0)
{ after(grammarAccess.getPrefixRightOperandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixState
entryRulePrefixState 
:
{ before(grammarAccess.getPrefixStateRule()); }
	 rulePrefixState
{ after(grammarAccess.getPrefixStateRule()); } 
	 EOF 
;

// Rule PrefixState
rulePrefixState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixStateAccess().getGroup()); }
(rule__PrefixState__Group__0)
{ after(grammarAccess.getPrefixStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixCondition
entryRulePrefixCondition 
:
{ before(grammarAccess.getPrefixConditionRule()); }
	 rulePrefixCondition
{ after(grammarAccess.getPrefixConditionRule()); } 
	 EOF 
;

// Rule PrefixCondition
rulePrefixCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixConditionAccess().getGroup()); }
(rule__PrefixCondition__Group__0)
{ after(grammarAccess.getPrefixConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixEvent
entryRulePrefixEvent 
:
{ before(grammarAccess.getPrefixEventRule()); }
	 rulePrefixEvent
{ after(grammarAccess.getPrefixEventRule()); } 
	 EOF 
;

// Rule PrefixEvent
rulePrefixEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixEventAccess().getGroup()); }
(rule__PrefixEvent__Group__0)
{ after(grammarAccess.getPrefixEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixFixedSyntax
entryRulePrefixFixedSyntax 
:
{ before(grammarAccess.getPrefixFixedSyntaxRule()); }
	 rulePrefixFixedSyntax
{ after(grammarAccess.getPrefixFixedSyntaxRule()); } 
	 EOF 
;

// Rule PrefixFixedSyntax
rulePrefixFixedSyntax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getAlternatives()); }
(rule__PrefixFixedSyntax__Alternatives)
{ after(grammarAccess.getPrefixFixedSyntaxAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamEvent
entryRuleParamEvent 
:
{ before(grammarAccess.getParamEventRule()); }
	 ruleParamEvent
{ after(grammarAccess.getParamEventRule()); } 
	 EOF 
;

// Rule ParamEvent
ruleParamEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamEventAccess().getGroup()); }
(rule__ParamEvent__Group__0)
{ after(grammarAccess.getParamEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorEvent
entryRuleActorEvent 
:
{ before(grammarAccess.getActorEventRule()); }
	 ruleActorEvent
{ after(grammarAccess.getActorEventRule()); } 
	 EOF 
;

// Rule ActorEvent
ruleActorEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorEventAccess().getGroup()); }
(rule__ActorEvent__Group__0)
{ after(grammarAccess.getActorEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateEvent
entryRuleStateEvent 
:
{ before(grammarAccess.getStateEventRule()); }
	 ruleStateEvent
{ after(grammarAccess.getStateEventRule()); } 
	 EOF 
;

// Rule StateEvent
ruleStateEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateEventAccess().getGroup()); }
(rule__StateEvent__Group__0)
{ after(grammarAccess.getStateEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterState
entryRuleParameterState 
:
{ before(grammarAccess.getParameterStateRule()); }
	 ruleParameterState
{ after(grammarAccess.getParameterStateRule()); } 
	 EOF 
;

// Rule ParameterState
ruleParameterState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterStateAccess().getGroup()); }
(rule__ParameterState__Group__0)
{ after(grammarAccess.getParameterStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainFunction
entryRuleMainFunction 
:
{ before(grammarAccess.getMainFunctionRule()); }
	 ruleMainFunction
{ after(grammarAccess.getMainFunctionRule()); } 
	 EOF 
;

// Rule MainFunction
ruleMainFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainFunctionAccess().getGroup()); }
(rule__MainFunction__Group__0)
{ after(grammarAccess.getMainFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainComposition
entryRuleMainComposition 
:
{ before(grammarAccess.getMainCompositionRule()); }
	 ruleMainComposition
{ after(grammarAccess.getMainCompositionRule()); } 
	 EOF 
;

// Rule MainComposition
ruleMainComposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainCompositionAccess().getGroup()); }
(rule__MainComposition__Group__0)
{ after(grammarAccess.getMainCompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainStateTransition
entryRuleMainStateTransition 
:
{ before(grammarAccess.getMainStateTransitionRule()); }
	 ruleMainStateTransition
{ after(grammarAccess.getMainStateTransitionRule()); } 
	 EOF 
;

// Rule MainStateTransition
ruleMainStateTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainStateTransitionAccess().getGroup()); }
(rule__MainStateTransition__Group__0)
{ after(grammarAccess.getMainStateTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainAttributes
entryRuleMainAttributes 
:
{ before(grammarAccess.getMainAttributesRule()); }
	 ruleMainAttributes
{ after(grammarAccess.getMainAttributesRule()); } 
	 EOF 
;

// Rule MainAttributes
ruleMainAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainAttributesAccess().getGroup()); }
(rule__MainAttributes__Group__0)
{ after(grammarAccess.getMainAttributesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainFunctions
entryRuleMainFunctions 
:
{ before(grammarAccess.getMainFunctionsRule()); }
	 ruleMainFunctions
{ after(grammarAccess.getMainFunctionsRule()); } 
	 EOF 
;

// Rule MainFunctions
ruleMainFunctions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainFunctionsAccess().getGroup()); }
(rule__MainFunctions__Group__0)
{ after(grammarAccess.getMainFunctionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperator
entryRuleOperator 
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAccess().getOperatorAssignment()); }
(rule__Operator__OperatorAssignment)
{ after(grammarAccess.getOperatorAccess().getOperatorAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutTransition
entryRuleOutTransition 
:
{ before(grammarAccess.getOutTransitionRule()); }
	 ruleOutTransition
{ after(grammarAccess.getOutTransitionRule()); } 
	 EOF 
;

// Rule OutTransition
ruleOutTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutTransitionAccess().getGroup()); }
(rule__OutTransition__Group__0)
{ after(grammarAccess.getOutTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoTransition
entryRuleNoTransition 
:
{ before(grammarAccess.getNoTransitionRule()); }
	 ruleNoTransition
{ after(grammarAccess.getNoTransitionRule()); } 
	 EOF 
;

// Rule NoTransition
ruleNoTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoTransitionAccess().getGroup()); }
(rule__NoTransition__Group__0)
{ after(grammarAccess.getNoTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystem
entryRuleSystem 
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemAccess().getGroup()); }
(rule__System__Group__0)
{ after(grammarAccess.getSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUser
entryRuleUser 
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserAccess().getGroup()); }
(rule__User__Group__0)
{ after(grammarAccess.getUserAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getGroup()); }
(rule__Value__Group__0)
{ after(grammarAccess.getValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTime
entryRuleTime 
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeAccess().getGroup()); }
(rule__Time__Group__0)
{ after(grammarAccess.getTimeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimingConstraint
entryRuleTimingConstraint 
:
{ before(grammarAccess.getTimingConstraintRule()); }
	 ruleTimingConstraint
{ after(grammarAccess.getTimingConstraintRule()); } 
	 EOF 
;

// Rule TimingConstraint
ruleTimingConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimingConstraintAccess().getGroup()); }
(rule__TimingConstraint__Group__0)
{ after(grammarAccess.getTimingConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Requirement__MainRequirementAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getMainRequirementMainFunctionParserRuleCall_2_0_0()); }
	ruleMainFunction
{ after(grammarAccess.getRequirementAccess().getMainRequirementMainFunctionParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getMainRequirementMainCompositionParserRuleCall_2_0_1()); }
	ruleMainComposition
{ after(grammarAccess.getRequirementAccess().getMainRequirementMainCompositionParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getMainRequirementMainStateTransitionParserRuleCall_2_0_2()); }
	ruleMainStateTransition
{ after(grammarAccess.getRequirementAccess().getMainRequirementMainStateTransitionParserRuleCall_2_0_2()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getMainRequirementMainAttributesParserRuleCall_2_0_3()); }
	ruleMainAttributes
{ after(grammarAccess.getRequirementAccess().getMainRequirementMainAttributesParserRuleCall_2_0_3()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getMainRequirementMainFunctionsParserRuleCall_2_0_4()); }
	ruleMainFunctions
{ after(grammarAccess.getRequirementAccess().getMainRequirementMainFunctionsParserRuleCall_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__LeftOperandAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getLeftOperandPrefixConditionParserRuleCall_0_0_0()); }
	rulePrefixCondition
{ after(grammarAccess.getPrefixAccess().getLeftOperandPrefixConditionParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixAccess().getLeftOperandPrefixStateParserRuleCall_0_0_1()); }
	rulePrefixState
{ after(grammarAccess.getPrefixAccess().getLeftOperandPrefixStateParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getPrefixAccess().getLeftOperandPrefixEventParserRuleCall_0_0_2()); }
	rulePrefixEvent
{ after(grammarAccess.getPrefixAccess().getLeftOperandPrefixEventParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixRightOperand__OperatorAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getOperatorAndKeyword_0_0_0()); }

	'and' 

{ after(grammarAccess.getPrefixRightOperandAccess().getOperatorAndKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixRightOperandAccess().getOperatorOrKeyword_0_0_1()); }

	'or' 

{ after(grammarAccess.getPrefixRightOperandAccess().getOperatorOrKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixRightOperand__PrefixRightOperandAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandPrefixConditionParserRuleCall_1_0_0()); }
	rulePrefixCondition
{ after(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandPrefixConditionParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandPrefixStateParserRuleCall_1_0_1()); }
	rulePrefixState
{ after(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandPrefixStateParserRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandPrefixEventParserRuleCall_1_0_2()); }
	rulePrefixEvent
{ after(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandPrefixEventParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixState__StateExpressionAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStateAccess().getStateExpressionStateParserRuleCall_1_0_0()); }
	ruleState
{ after(grammarAccess.getPrefixStateAccess().getStateExpressionStateParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixStateAccess().getStateExpressionParameterStateParserRuleCall_1_0_1()); }
	ruleParameterState
{ after(grammarAccess.getPrefixStateAccess().getStateExpressionParameterStateParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__ParameterAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getParameterTimeParserRuleCall_1_0_0()); }
	ruleTime
{ after(grammarAccess.getPrefixConditionAccess().getParameterTimeParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixConditionAccess().getParameterParameterParserRuleCall_1_0_1()); }
	ruleParameter
{ after(grammarAccess.getPrefixConditionAccess().getParameterParameterParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getIsKeyword_2_0()); }

	'is' 

{ after(grammarAccess.getPrefixConditionAccess().getIsKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getPrefixConditionAccess().getHasKeyword_2_1()); }

	'has' 

{ after(grammarAccess.getPrefixConditionAccess().getHasKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getValueAssignment_4_0()); }
(rule__PrefixCondition__ValueAssignment_4_0)
{ after(grammarAccess.getPrefixConditionAccess().getValueAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getPrefixConditionAccess().getTimeAssignment_4_1()); }
(rule__PrefixCondition__TimeAssignment_4_1)
{ after(grammarAccess.getPrefixConditionAccess().getTimeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixEvent__Event_expressionAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixEventAccess().getEvent_expressionParamEventParserRuleCall_1_0_0()); }
	ruleParamEvent
{ after(grammarAccess.getPrefixEventAccess().getEvent_expressionParamEventParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixEventAccess().getEvent_expressionActorEventParserRuleCall_1_0_1()); }
	ruleActorEvent
{ after(grammarAccess.getPrefixEventAccess().getEvent_expressionActorEventParserRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getPrefixEventAccess().getEvent_expressionStateEventParserRuleCall_1_0_2()); }
	ruleStateEvent
{ after(grammarAccess.getPrefixEventAccess().getEvent_expressionStateEventParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getWhileKeyword_0()); }

	'While' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getWhileKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getIfKeyword_1()); }

	'If' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getIfKeyword_1()); }
)

    |(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getGroup_2()); }
(rule__PrefixFixedSyntax__Group_2__0)
{ after(grammarAccess.getPrefixFixedSyntaxAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getWhileKeyword_3()); }

	'while' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getWhileKeyword_3()); }
)

    |(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getIfKeyword_4()); }

	'if' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getIfKeyword_4()); }
)

    |(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getGroup_5()); }
(rule__PrefixFixedSyntax__Group_5__0)
{ after(grammarAccess.getPrefixFixedSyntaxAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__ParameterAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getParameterTimeParserRuleCall_0_0_0()); }
	ruleTime
{ after(grammarAccess.getParamEventAccess().getParameterTimeParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getParamEventAccess().getParameterParameterParserRuleCall_0_0_1()); }
	ruleParameter
{ after(grammarAccess.getParamEventAccess().getParameterParameterParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__ActionAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getActionIncreasesAboveKeyword_1_0_0()); }

	'increases above' 

{ after(grammarAccess.getParamEventAccess().getActionIncreasesAboveKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getParamEventAccess().getActionDecreasesBelowKeyword_1_0_1()); }

	'decreases below' 

{ after(grammarAccess.getParamEventAccess().getActionDecreasesBelowKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getParamEventAccess().getActionReachesKeyword_1_0_2()); }

	'reaches' 

{ after(grammarAccess.getParamEventAccess().getActionReachesKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__ActorAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getActorSystemParserRuleCall_0_0_0()); }
	ruleSystem
{ after(grammarAccess.getActorEventAccess().getActorSystemParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getActorEventAccess().getActorUserParserRuleCall_0_0_1()); }
	ruleUser
{ after(grammarAccess.getActorEventAccess().getActorUserParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__ActionAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getActionActivatesKeyword_1_0_0()); }

	'activates' 

{ after(grammarAccess.getActorEventAccess().getActionActivatesKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getActorEventAccess().getActionDeactivatesKeyword_1_0_1()); }

	'deactivates' 

{ after(grammarAccess.getActorEventAccess().getActionDeactivatesKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterState__Parameter_valueAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterStateAccess().getParameter_valueValueParserRuleCall_2_0_0()); }
	ruleValue
{ after(grammarAccess.getParameterStateAccess().getParameter_valueValueParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getParameterStateAccess().getParameter_valueStateParserRuleCall_2_0_1()); }
	ruleState
{ after(grammarAccess.getParameterStateAccess().getParameter_valueStateParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getTheKeyword_0_0()); }

	'The' 

{ after(grammarAccess.getMainFunctionAccess().getTheKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMainFunctionAccess().getTheKeyword_0_1()); }

	'the' 

{ after(grammarAccess.getMainFunctionAccess().getTheKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__SystemAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getSystemSystemParserRuleCall_1_0_0()); }
	ruleSystem
{ after(grammarAccess.getMainFunctionAccess().getSystemSystemParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getMainFunctionAccess().getSystemActorParserRuleCall_1_0_1()); }
	ruleActor
{ after(grammarAccess.getMainFunctionAccess().getSystemActorParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getTheKeyword_0_0()); }

	'The' 

{ after(grammarAccess.getMainCompositionAccess().getTheKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMainCompositionAccess().getTheKeyword_0_1()); }

	'the' 

{ after(grammarAccess.getMainCompositionAccess().getTheKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getTheKeyword_0_0()); }

	'The' 

{ after(grammarAccess.getMainStateTransitionAccess().getTheKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMainStateTransitionAccess().getTheKeyword_0_1()); }

	'the' 

{ after(grammarAccess.getMainStateTransitionAccess().getTheKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__TransitionAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getTransitionTransitionParserRuleCall_3_0_0()); }
	ruleTransition
{ after(grammarAccess.getMainStateTransitionAccess().getTransitionTransitionParserRuleCall_3_0_0()); }
)

    |(
{ before(grammarAccess.getMainStateTransitionAccess().getTransitionOutTransitionParserRuleCall_3_0_1()); }
	ruleOutTransition
{ after(grammarAccess.getMainStateTransitionAccess().getTransitionOutTransitionParserRuleCall_3_0_1()); }
)

    |(
{ before(grammarAccess.getMainStateTransitionAccess().getTransitionNoTransitionParserRuleCall_3_0_2()); }
	ruleNoTransition
{ after(grammarAccess.getMainStateTransitionAccess().getTransitionNoTransitionParserRuleCall_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getTheKeyword_0_0()); }

	'The' 

{ after(grammarAccess.getMainAttributesAccess().getTheKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMainAttributesAccess().getTheKeyword_0_1()); }

	'the' 

{ after(grammarAccess.getMainAttributesAccess().getTheKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getTheKeyword_0_0()); }

	'The' 

{ after(grammarAccess.getMainFunctionsAccess().getTheKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMainFunctionsAccess().getTheKeyword_0_1()); }

	'the' 

{ after(grammarAccess.getMainFunctionsAccess().getTheKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__OperatorAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getOperatorLess_thanKeyword_0_0()); }

	'less_than' 

{ after(grammarAccess.getOperatorAccess().getOperatorLess_thanKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOperatorEqual_toKeyword_0_1()); }

	'equal_to' 

{ after(grammarAccess.getOperatorAccess().getOperatorEqual_toKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOperatorGreater_thanKeyword_0_2()); }

	'greater_than' 

{ after(grammarAccess.getOperatorAccess().getOperatorGreater_thanKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOperatorNot_equal_toKeyword_0_3()); }

	'not_equal_to' 

{ after(grammarAccess.getOperatorAccess().getOperatorNot_equal_toKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOperatorGreater_than_or_equal_toKeyword_0_4()); }

	'greater_than_or_equal_to' 

{ after(grammarAccess.getOperatorAccess().getOperatorGreater_than_or_equal_toKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOperatorLess_than_or_equal_toKeyword_0_5()); }

	'less_than_or_equal_to' 

{ after(grammarAccess.getOperatorAccess().getOperatorLess_than_or_equal_toKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Source_stateAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSource_stateStateParserRuleCall_1_1_0_0()); }
	ruleState
{ after(grammarAccess.getTransitionAccess().getSource_stateStateParserRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getSource_stateParameterStateParserRuleCall_1_1_0_1()); }
	ruleParameterState
{ after(grammarAccess.getTransitionAccess().getSource_stateParameterStateParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Target_stateAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTarget_stateStateParserRuleCall_3_0_0()); }
	ruleState
{ after(grammarAccess.getTransitionAccess().getTarget_stateStateParserRuleCall_3_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getTarget_stateParameterStateParserRuleCall_3_0_1()); }
	ruleParameterState
{ after(grammarAccess.getTransitionAccess().getTarget_stateParameterStateParserRuleCall_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutTransition__Source_stateAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutTransitionAccess().getSource_stateStateParserRuleCall_1_0_0()); }
	ruleState
{ after(grammarAccess.getOutTransitionAccess().getSource_stateStateParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getOutTransitionAccess().getSource_stateParameterStateParserRuleCall_1_0_1()); }
	ruleParameterState
{ after(grammarAccess.getOutTransitionAccess().getSource_stateParameterStateParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoTransition__StateAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoTransitionAccess().getStateStateParserRuleCall_1_0_0()); }
	ruleState
{ after(grammarAccess.getNoTransitionAccess().getStateStateParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNoTransitionAccess().getStateParameterStateParserRuleCall_1_0_1()); }
	ruleParameterState
{ after(grammarAccess.getNoTransitionAccess().getStateParameterStateParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getToKeyword_3_0()); }

	'to' 

{ after(grammarAccess.getActionAccess().getToKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getFromKeyword_3_1()); }

	'from' 

{ after(grammarAccess.getActionAccess().getFromKeyword_3_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getTheKeyword_3_2()); }

	'the' 

{ after(grammarAccess.getActionAccess().getTheKeyword_3_2()); }
)

    |(
{ before(grammarAccess.getActionAccess().getOnKeyword_3_3()); }

	'on' 

{ after(grammarAccess.getActionAccess().getOnKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SubjectAlternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSubjectSystemParserRuleCall_4_0_0()); }
	ruleSystem
{ after(grammarAccess.getActionAccess().getSubjectSystemParserRuleCall_4_0_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getSubjectActorParserRuleCall_4_0_1()); }
	ruleActor
{ after(grammarAccess.getActionAccess().getSubjectActorParserRuleCall_4_0_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getSubjectParameterParserRuleCall_4_0_2()); }
	ruleParameter
{ after(grammarAccess.getActionAccess().getSubjectParameterParserRuleCall_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeUnitAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getTimeUnitSKeyword_2_0_0()); }

	's' 

{ after(grammarAccess.getTimeAccess().getTimeUnitSKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getTimeAccess().getTimeUnitMKeyword_2_0_1()); }

	'm' 

{ after(grammarAccess.getTimeAccess().getTimeUnitMKeyword_2_0_1()); }
)

    |(
{ before(grammarAccess.getTimeAccess().getTimeUnitHKeyword_2_0_2()); }

	'h' 

{ after(grammarAccess.getTimeAccess().getTimeUnitHKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__TimingConstraintAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getTimingConstraintWithinKeyword_0_0_0()); }

	'within' 

{ after(grammarAccess.getTimingConstraintAccess().getTimingConstraintWithinKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getTimingConstraintAccess().getTimingConstraintEveryKeyword_0_0_1()); }

	'every' 

{ after(grammarAccess.getTimingConstraintAccess().getTimingConstraintEveryKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getTimingConstraintAccess().getTimingConstraintForKeyword_0_0_2()); }

	'for' 

{ after(grammarAccess.getTimingConstraintAccess().getTimingConstraintForKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__MinmaxAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getMinmaxLessThanKeyword_1_0_0()); }

	'less than' 

{ after(grammarAccess.getTimingConstraintAccess().getMinmaxLessThanKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getTimingConstraintAccess().getMinmaxAtLeastKeyword_1_0_1()); }

	'at least' 

{ after(grammarAccess.getTimingConstraintAccess().getMinmaxAtLeastKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Requirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getReqIDAssignment_0()); }
(rule__Requirement__ReqIDAssignment_0)
{ after(grammarAccess.getRequirementAccess().getReqIDAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__1__Impl
	rule__Requirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getPrefixAssignment_1()); }
(rule__Requirement__PrefixAssignment_1)?
{ after(grammarAccess.getRequirementAccess().getPrefixAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__2__Impl
	rule__Requirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getMainRequirementAssignment_2()); }
(rule__Requirement__MainRequirementAssignment_2)
{ after(grammarAccess.getRequirementAccess().getMainRequirementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getRequirementAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReqID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqID__Group__0__Impl
	rule__ReqID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqIDAccess().getReqIDAssignment_0()); }
(rule__ReqID__ReqIDAssignment_0)
{ after(grammarAccess.getReqIDAccess().getReqIDAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqIDAccess().getNameAssignment_1()); }
(rule__ReqID__NameAssignment_1)
{ after(grammarAccess.getReqIDAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prefix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefix__Group__0__Impl
	rule__Prefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getLeftOperandAssignment_0()); }
(rule__Prefix__LeftOperandAssignment_0)
{ after(grammarAccess.getPrefixAccess().getLeftOperandAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getPrefixListAssignment_1()); }
(rule__Prefix__PrefixListAssignment_1)*
{ after(grammarAccess.getPrefixAccess().getPrefixListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixRightOperand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixRightOperand__Group__0__Impl
	rule__PrefixRightOperand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixRightOperand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getOperatorAssignment_0()); }
(rule__PrefixRightOperand__OperatorAssignment_0)
{ after(grammarAccess.getPrefixRightOperandAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixRightOperand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixRightOperand__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixRightOperand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandAssignment_1()); }
(rule__PrefixRightOperand__PrefixRightOperandAssignment_1)
{ after(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixState__Group__0__Impl
	rule__PrefixState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStateAccess().getPrefixFixedSyntaxAssignment_0()); }
(rule__PrefixState__PrefixFixedSyntaxAssignment_0)
{ after(grammarAccess.getPrefixStateAccess().getPrefixFixedSyntaxAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixState__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStateAccess().getStateExpressionAssignment_1()); }
(rule__PrefixState__StateExpressionAssignment_1)
{ after(grammarAccess.getPrefixStateAccess().getStateExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixCondition__Group__0__Impl
	rule__PrefixCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getPrefixFixedSyntaxAssignment_0()); }
(rule__PrefixCondition__PrefixFixedSyntaxAssignment_0)
{ after(grammarAccess.getPrefixConditionAccess().getPrefixFixedSyntaxAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixCondition__Group__1__Impl
	rule__PrefixCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getParameterAssignment_1()); }
(rule__PrefixCondition__ParameterAssignment_1)
{ after(grammarAccess.getPrefixConditionAccess().getParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixCondition__Group__2__Impl
	rule__PrefixCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getAlternatives_2()); }
(rule__PrefixCondition__Alternatives_2)
{ after(grammarAccess.getPrefixConditionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixCondition__Group__3__Impl
	rule__PrefixCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getOperatorAssignment_3()); }
(rule__PrefixCondition__OperatorAssignment_3)?
{ after(grammarAccess.getPrefixConditionAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixCondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getAlternatives_4()); }
(rule__PrefixCondition__Alternatives_4)?
{ after(grammarAccess.getPrefixConditionAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrefixEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixEvent__Group__0__Impl
	rule__PrefixEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixEventAccess().getPrefixFixedSyntaxAssignment_0()); }
(rule__PrefixEvent__PrefixFixedSyntaxAssignment_0)
{ after(grammarAccess.getPrefixEventAccess().getPrefixFixedSyntaxAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixEventAccess().getEvent_expressionAssignment_1()); }
(rule__PrefixEvent__Event_expressionAssignment_1)
{ after(grammarAccess.getPrefixEventAccess().getEvent_expressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixFixedSyntax__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixFixedSyntax__Group_2__0__Impl
	rule__PrefixFixedSyntax__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_2_0()); }

	'As' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixFixedSyntax__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixFixedSyntax__Group_2__1__Impl
	rule__PrefixFixedSyntax__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getSoonKeyword_2_1()); }

	'soon' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getSoonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixFixedSyntax__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixFixedSyntax__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_2_2()); }

	'as' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrefixFixedSyntax__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixFixedSyntax__Group_5__0__Impl
	rule__PrefixFixedSyntax__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_5_0()); }

	'as' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixFixedSyntax__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixFixedSyntax__Group_5__1__Impl
	rule__PrefixFixedSyntax__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getSoonKeyword_5_1()); }

	'soon' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getSoonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixFixedSyntax__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixFixedSyntax__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixFixedSyntax__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_5_2()); }

	'as' 

{ after(grammarAccess.getPrefixFixedSyntaxAccess().getAsKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParamEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamEvent__Group__0__Impl
	rule__ParamEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getParameterAssignment_0()); }
(rule__ParamEvent__ParameterAssignment_0)
{ after(grammarAccess.getParamEventAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamEvent__Group__1__Impl
	rule__ParamEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getActionAssignment_1()); }
(rule__ParamEvent__ActionAssignment_1)
{ after(grammarAccess.getParamEventAccess().getActionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamEvent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getValueAssignment_2()); }
(rule__ParamEvent__ValueAssignment_2)
{ after(grammarAccess.getParamEventAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActorEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorEvent__Group__0__Impl
	rule__ActorEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getActorAssignment_0()); }
(rule__ActorEvent__ActorAssignment_0)
{ after(grammarAccess.getActorEventAccess().getActorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorEvent__Group__1__Impl
	rule__ActorEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getActionAssignment_1()); }
(rule__ActorEvent__ActionAssignment_1)
{ after(grammarAccess.getActorEventAccess().getActionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorEvent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getEntityAssignment_2()); }
(rule__ActorEvent__EntityAssignment_2)
{ after(grammarAccess.getActorEventAccess().getEntityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateEvent__Group__0__Impl
	rule__StateEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateEventAccess().getSystemAssignment_0()); }
(rule__StateEvent__SystemAssignment_0)
{ after(grammarAccess.getStateEventAccess().getSystemAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateEvent__Group__1__Impl
	rule__StateEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateEventAccess().getStartsKeyword_1()); }

	'starts' 

{ after(grammarAccess.getStateEventAccess().getStartsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateEvent__Group__2__Impl
	rule__StateEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateEventAccess().getInKeyword_2()); }
(
	'in' 
)?
{ after(grammarAccess.getStateEventAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateEvent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateEventAccess().getStateAssignment_3()); }
(rule__StateEvent__StateAssignment_3)
{ after(grammarAccess.getStateEventAccess().getStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterState__Group__0__Impl
	rule__ParameterState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterStateAccess().getParameterAssignment_0()); }
(rule__ParameterState__ParameterAssignment_0)
{ after(grammarAccess.getParameterStateAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterState__Group__1__Impl
	rule__ParameterState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterStateAccess().getIsKeyword_1()); }
(
	'is' 
)?
{ after(grammarAccess.getParameterStateAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterState__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterStateAccess().getParameter_valueAssignment_2()); }
(rule__ParameterState__Parameter_valueAssignment_2)?
{ after(grammarAccess.getParameterStateAccess().getParameter_valueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MainFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__0__Impl
	rule__MainFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getAlternatives_0()); }
(rule__MainFunction__Alternatives_0)
{ after(grammarAccess.getMainFunctionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__1__Impl
	rule__MainFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getSystemAssignment_1()); }
(rule__MainFunction__SystemAssignment_1)
{ after(grammarAccess.getMainFunctionAccess().getSystemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__2__Impl
	rule__MainFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getShallKeyword_2()); }

	'shall' 

{ after(grammarAccess.getMainFunctionAccess().getShallKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__3__Impl
	rule__MainFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getNotKeyword_3()); }
(
	'not' 
)?
{ after(grammarAccess.getMainFunctionAccess().getNotKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__4__Impl
	rule__MainFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getGroup_4()); }
(rule__MainFunction__Group_4__0)?
{ after(grammarAccess.getMainFunctionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getFunctionAssignment_5()); }
(rule__MainFunction__FunctionAssignment_5)
{ after(grammarAccess.getMainFunctionAccess().getFunctionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MainFunction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group_4__0__Impl
	rule__MainFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getBeKeyword_4_0()); }

	'be' 

{ after(grammarAccess.getMainFunctionAccess().getBeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group_4__1__Impl
	rule__MainFunction__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getAbleKeyword_4_1()); }

	'able' 

{ after(grammarAccess.getMainFunctionAccess().getAbleKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getToKeyword_4_2()); }

	'to' 

{ after(grammarAccess.getMainFunctionAccess().getToKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MainComposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__0__Impl
	rule__MainComposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getAlternatives_0()); }
(rule__MainComposition__Alternatives_0)
{ after(grammarAccess.getMainCompositionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__1__Impl
	rule__MainComposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSystemAssignment_1()); }
(rule__MainComposition__SystemAssignment_1)
{ after(grammarAccess.getMainCompositionAccess().getSystemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__2__Impl
	rule__MainComposition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getShallKeyword_2()); }

	'shall' 

{ after(grammarAccess.getMainCompositionAccess().getShallKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__3__Impl
	rule__MainComposition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getConsistKeyword_3()); }

	'consist' 

{ after(grammarAccess.getMainCompositionAccess().getConsistKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__4__Impl
	rule__MainComposition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getOfKeyword_4()); }

	'of' 

{ after(grammarAccess.getMainCompositionAccess().getOfKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__5__Impl
	rule__MainComposition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getTheKeyword_5()); }

	'the' 

{ after(grammarAccess.getMainCompositionAccess().getTheKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__6__Impl
	rule__MainComposition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSubsystemsKeyword_6()); }

	'subsystems' 

{ after(grammarAccess.getMainCompositionAccess().getSubsystemsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__7__Impl
	rule__MainComposition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSubsystemListAssignment_7()); }
(rule__MainComposition__SubsystemListAssignment_7)
{ after(grammarAccess.getMainCompositionAccess().getSubsystemListAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getGroup_8()); }
(rule__MainComposition__Group_8__0)*
{ after(grammarAccess.getMainCompositionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__MainComposition__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group_8__0__Impl
	rule__MainComposition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getMainCompositionAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainComposition__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainComposition__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSubsystemListAssignment_8_1()); }
(rule__MainComposition__SubsystemListAssignment_8_1)
{ after(grammarAccess.getMainCompositionAccess().getSubsystemListAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MainStateTransition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group__0__Impl
	rule__MainStateTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getAlternatives_0()); }
(rule__MainStateTransition__Alternatives_0)
{ after(grammarAccess.getMainStateTransitionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainStateTransition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group__1__Impl
	rule__MainStateTransition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getSystemAssignment_1()); }
(rule__MainStateTransition__SystemAssignment_1)
{ after(grammarAccess.getMainStateTransitionAccess().getSystemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainStateTransition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group__2__Impl
	rule__MainStateTransition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getShallKeyword_2()); }

	'shall' 

{ after(grammarAccess.getMainStateTransitionAccess().getShallKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainStateTransition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group__3__Impl
	rule__MainStateTransition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getTransitionAssignment_3()); }
(rule__MainStateTransition__TransitionAssignment_3)
{ after(grammarAccess.getMainStateTransitionAccess().getTransitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainStateTransition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getGroup_4()); }
(rule__MainStateTransition__Group_4__0)?
{ after(grammarAccess.getMainStateTransitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MainStateTransition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group_4__0__Impl
	rule__MainStateTransition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getAndKeyword_4_0()); }

	'and' 

{ after(grammarAccess.getMainStateTransitionAccess().getAndKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainStateTransition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainStateTransition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getFunctionAssignment_4_1()); }
(rule__MainStateTransition__FunctionAssignment_4_1)
{ after(grammarAccess.getMainStateTransitionAccess().getFunctionAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MainAttributes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__0__Impl
	rule__MainAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getAlternatives_0()); }
(rule__MainAttributes__Alternatives_0)
{ after(grammarAccess.getMainAttributesAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__1__Impl
	rule__MainAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getSystemAssignment_1()); }
(rule__MainAttributes__SystemAssignment_1)
{ after(grammarAccess.getMainAttributesAccess().getSystemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__2__Impl
	rule__MainAttributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getShallKeyword_2()); }

	'shall' 

{ after(grammarAccess.getMainAttributesAccess().getShallKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__3__Impl
	rule__MainAttributes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getHaveKeyword_3()); }

	'have' 

{ after(grammarAccess.getMainAttributesAccess().getHaveKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__4__Impl
	rule__MainAttributes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getTheKeyword_4()); }

	'the' 

{ after(grammarAccess.getMainAttributesAccess().getTheKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__5__Impl
	rule__MainAttributes__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getAttributesKeyword_5()); }

	'attributes' 

{ after(grammarAccess.getMainAttributesAccess().getAttributesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__6__Impl
	rule__MainAttributes__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getAttributeListAssignment_6()); }
(rule__MainAttributes__AttributeListAssignment_6)
{ after(grammarAccess.getMainAttributesAccess().getAttributeListAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getGroup_7()); }
(rule__MainAttributes__Group_7__0)*
{ after(grammarAccess.getMainAttributesAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__MainAttributes__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group_7__0__Impl
	rule__MainAttributes__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getMainAttributesAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainAttributes__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainAttributes__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getAttributeListAssignment_7_1()); }
(rule__MainAttributes__AttributeListAssignment_7_1)
{ after(grammarAccess.getMainAttributesAccess().getAttributeListAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MainFunctions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__0__Impl
	rule__MainFunctions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getAlternatives_0()); }
(rule__MainFunctions__Alternatives_0)
{ after(grammarAccess.getMainFunctionsAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__1__Impl
	rule__MainFunctions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getSystemAssignment_1()); }
(rule__MainFunctions__SystemAssignment_1)
{ after(grammarAccess.getMainFunctionsAccess().getSystemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__2__Impl
	rule__MainFunctions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getShallKeyword_2()); }

	'shall' 

{ after(grammarAccess.getMainFunctionsAccess().getShallKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__3__Impl
	rule__MainFunctions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getHaveKeyword_3()); }

	'have' 

{ after(grammarAccess.getMainFunctionsAccess().getHaveKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__4__Impl
	rule__MainFunctions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getTheKeyword_4()); }

	'the' 

{ after(grammarAccess.getMainFunctionsAccess().getTheKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__5__Impl
	rule__MainFunctions__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getFunctionsKeyword_5()); }

	'functions' 

{ after(grammarAccess.getMainFunctionsAccess().getFunctionsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__6__Impl
	rule__MainFunctions__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getFunctionListAssignment_6()); }
(rule__MainFunctions__FunctionListAssignment_6)
{ after(grammarAccess.getMainFunctionsAccess().getFunctionListAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getGroup_7()); }
(rule__MainFunctions__Group_7__0)*
{ after(grammarAccess.getMainFunctionsAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__MainFunctions__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group_7__0__Impl
	rule__MainFunctions__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getMainFunctionsAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunctions__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunctions__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getFunctionListAssignment_7_1()); }
(rule__MainFunctions__FunctionListAssignment_7_1)
{ after(grammarAccess.getMainFunctionsAccess().getFunctionListAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGoKeyword_0()); }

	'go' 

{ after(grammarAccess.getTransitionAccess().getGoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_1()); }
(rule__Transition__Group_1__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getTransitionAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTarget_stateAssignment_3()); }
(rule__Transition__Target_stateAssignment_3)
{ after(grammarAccess.getTransitionAccess().getTarget_stateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_1__0__Impl
	rule__Transition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getFromKeyword_1_0()); }

	'from' 

{ after(grammarAccess.getTransitionAccess().getFromKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSource_stateAssignment_1_1()); }
(rule__Transition__Source_stateAssignment_1_1)
{ after(grammarAccess.getTransitionAccess().getSource_stateAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutTransition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutTransition__Group__0__Impl
	rule__OutTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutTransition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutTransitionAccess().getLeaveKeyword_0()); }

	'leave' 

{ after(grammarAccess.getOutTransitionAccess().getLeaveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutTransition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutTransition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutTransition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutTransitionAccess().getSource_stateAssignment_1()); }
(rule__OutTransition__Source_stateAssignment_1)
{ after(grammarAccess.getOutTransitionAccess().getSource_stateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoTransition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoTransition__Group__0__Impl
	rule__NoTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoTransition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoTransitionAccess().getRemain_inKeyword_0()); }

	'remain_in' 

{ after(grammarAccess.getNoTransitionAccess().getRemain_inKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoTransition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoTransition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoTransition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoTransitionAccess().getStateAssignment_1()); }
(rule__NoTransition__StateAssignment_1)
{ after(grammarAccess.getNoTransitionAccess().getStateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__System__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemAssignment_0()); }
(rule__System__SystemAssignment_0)
{ after(grammarAccess.getSystemAccess().getSystemAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameAssignment_1()); }
(rule__System__NameAssignment_1)
{ after(grammarAccess.getSystemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorAssignment_0()); }
(rule__Actor__ActorAssignment_0)
{ after(grammarAccess.getActorAccess().getActorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
(rule__Actor__NameAssignment_1)
{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__User__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__0__Impl
	rule__User__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getUserAssignment_0()); }
(rule__User__UserAssignment_0)
{ after(grammarAccess.getUserAccess().getUserAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getNameAssignment_1()); }
(rule__User__NameAssignment_1)
{ after(grammarAccess.getUserAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionAssignment_0()); }
(rule__Action__ActionAssignment_0)
{ after(grammarAccess.getActionAccess().getActionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
(rule__Action__NameAssignment_1)
{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_2()); }
(rule__Action__Group_2__0)?
{ after(grammarAccess.getActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAlternatives_3()); }
(rule__Action__Alternatives_3)?
{ after(grammarAccess.getActionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSubjectAssignment_4()); }
(rule__Action__SubjectAssignment_4)
{ after(grammarAccess.getActionAccess().getSubjectAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Action__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParameterAssignment_2_0()); }
(rule__Action__ParameterAssignment_2_0)
{ after(grammarAccess.getActionAccess().getParameterAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getValueAssignment_2_1()); }
(rule__Action__ValueAssignment_2_1)?
{ after(grammarAccess.getActionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateAssignment_0()); }
(rule__State__StateAssignment_0)
{ after(grammarAccess.getStateAccess().getStateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeAssignment_0()); }
(rule__Attribute__AttributeAssignment_0)
{ after(grammarAccess.getAttributeAccess().getAttributeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeKeyword_2()); }

	'type:' 

{ after(grammarAccess.getAttributeAccess().getTypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
(rule__Attribute__TypeAssignment_3)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionAssignment_0()); }
(rule__Function__FunctionAssignment_0)
{ after(grammarAccess.getFunctionAccess().getFunctionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(rule__Function__NameAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeKeyword_2()); }

	'type:' 

{ after(grammarAccess.getFunctionAccess().getTypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeAssignment_3()); }
(rule__Function__TypeAssignment_3)
{ after(grammarAccess.getFunctionAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterAssignment_0()); }
(rule__Parameter__ParameterAssignment_0)
{ after(grammarAccess.getParameterAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValAssignment_0()); }
(rule__Value__ValAssignment_0)
{ after(grammarAccess.getValueAccess().getValAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueAssignment_1()); }
(rule__Value__ValueAssignment_1)
{ after(grammarAccess.getValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Time__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getTimeKeyword_0()); }

	'time:' 

{ after(grammarAccess.getTimeAccess().getTimeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getValueAssignment_1()); }
(rule__Time__ValueAssignment_1)
{ after(grammarAccess.getTimeAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getTimeUnitAssignment_2()); }
(rule__Time__TimeUnitAssignment_2)?
{ after(grammarAccess.getTimeAccess().getTimeUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimingConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimingConstraint__Group__0__Impl
	rule__TimingConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getTimingConstraintAssignment_0()); }
(rule__TimingConstraint__TimingConstraintAssignment_0)
{ after(grammarAccess.getTimingConstraintAccess().getTimingConstraintAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimingConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimingConstraint__Group__1__Impl
	rule__TimingConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getMinmaxAssignment_1()); }
(rule__TimingConstraint__MinmaxAssignment_1)?
{ after(grammarAccess.getTimingConstraintAccess().getMinmaxAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimingConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimingConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getTimeAssignment_2()); }
(rule__TimingConstraint__TimeAssignment_2)
{ after(grammarAccess.getTimingConstraintAccess().getTimeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__RequirementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRequirementsRequirementParserRuleCall_0()); }
	ruleRequirement{ after(grammarAccess.getModelAccess().getRequirementsRequirementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__ReqIDAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getReqIDReqIDParserRuleCall_0_0()); }
	ruleReqID{ after(grammarAccess.getRequirementAccess().getReqIDReqIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__PrefixAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getPrefixPrefixParserRuleCall_1_0()); }
	rulePrefix{ after(grammarAccess.getRequirementAccess().getPrefixPrefixParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__MainRequirementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getMainRequirementAlternatives_2_0()); }
(rule__Requirement__MainRequirementAlternatives_2_0)
{ after(grammarAccess.getRequirementAccess().getMainRequirementAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReqID__ReqIDAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqIDAccess().getReqIDIDKeyword_0_0()); }
(
{ before(grammarAccess.getReqIDAccess().getReqIDIDKeyword_0_0()); }

	'ID:' 

{ after(grammarAccess.getReqIDAccess().getReqIDIDKeyword_0_0()); }
)

{ after(grammarAccess.getReqIDAccess().getReqIDIDKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReqID__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqIDAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getReqIDAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__LeftOperandAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getLeftOperandAlternatives_0_0()); }
(rule__Prefix__LeftOperandAlternatives_0_0)
{ after(grammarAccess.getPrefixAccess().getLeftOperandAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__PrefixListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getPrefixListPrefixRightOperandParserRuleCall_1_0()); }
	rulePrefixRightOperand{ after(grammarAccess.getPrefixAccess().getPrefixListPrefixRightOperandParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixRightOperand__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getOperatorAlternatives_0_0()); }
(rule__PrefixRightOperand__OperatorAlternatives_0_0)
{ after(grammarAccess.getPrefixRightOperandAccess().getOperatorAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixRightOperand__PrefixRightOperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandAlternatives_1_0()); }
(rule__PrefixRightOperand__PrefixRightOperandAlternatives_1_0)
{ after(grammarAccess.getPrefixRightOperandAccess().getPrefixRightOperandAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixState__PrefixFixedSyntaxAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStateAccess().getPrefixFixedSyntaxPrefixFixedSyntaxParserRuleCall_0_0()); }
	rulePrefixFixedSyntax{ after(grammarAccess.getPrefixStateAccess().getPrefixFixedSyntaxPrefixFixedSyntaxParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixState__StateExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStateAccess().getStateExpressionAlternatives_1_0()); }
(rule__PrefixState__StateExpressionAlternatives_1_0)
{ after(grammarAccess.getPrefixStateAccess().getStateExpressionAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__PrefixFixedSyntaxAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getPrefixFixedSyntaxPrefixFixedSyntaxParserRuleCall_0_0()); }
	rulePrefixFixedSyntax{ after(grammarAccess.getPrefixConditionAccess().getPrefixFixedSyntaxPrefixFixedSyntaxParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__ParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getParameterAlternatives_1_0()); }
(rule__PrefixCondition__ParameterAlternatives_1_0)
{ after(grammarAccess.getPrefixConditionAccess().getParameterAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getOperatorOperatorParserRuleCall_3_0()); }
	ruleOperator{ after(grammarAccess.getPrefixConditionAccess().getOperatorOperatorParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__ValueAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getValueValueParserRuleCall_4_0_0()); }
	ruleValue{ after(grammarAccess.getPrefixConditionAccess().getValueValueParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixCondition__TimeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixConditionAccess().getTimeTimingConstraintParserRuleCall_4_1_0()); }
	ruleTimingConstraint{ after(grammarAccess.getPrefixConditionAccess().getTimeTimingConstraintParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixEvent__PrefixFixedSyntaxAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixEventAccess().getPrefixFixedSyntaxPrefixFixedSyntaxParserRuleCall_0_0()); }
	rulePrefixFixedSyntax{ after(grammarAccess.getPrefixEventAccess().getPrefixFixedSyntaxPrefixFixedSyntaxParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixEvent__Event_expressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixEventAccess().getEvent_expressionAlternatives_1_0()); }
(rule__PrefixEvent__Event_expressionAlternatives_1_0)
{ after(grammarAccess.getPrefixEventAccess().getEvent_expressionAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getParameterAlternatives_0_0()); }
(rule__ParamEvent__ParameterAlternatives_0_0)
{ after(grammarAccess.getParamEventAccess().getParameterAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__ActionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getActionAlternatives_1_0()); }
(rule__ParamEvent__ActionAlternatives_1_0)
{ after(grammarAccess.getParamEventAccess().getActionAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamEvent__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamEventAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getParamEventAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__ActorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getActorAlternatives_0_0()); }
(rule__ActorEvent__ActorAlternatives_0_0)
{ after(grammarAccess.getActorEventAccess().getActorAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__ActionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getActionAlternatives_1_0()); }
(rule__ActorEvent__ActionAlternatives_1_0)
{ after(grammarAccess.getActorEventAccess().getActionAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorEvent__EntityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorEventAccess().getEntityParameterParserRuleCall_2_0()); }
	ruleParameter{ after(grammarAccess.getActorEventAccess().getEntityParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__SystemAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateEventAccess().getSystemSystemParserRuleCall_0_0()); }
	ruleSystem{ after(grammarAccess.getStateEventAccess().getSystemSystemParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__StateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateEventAccess().getStateStateParserRuleCall_3_0()); }
	ruleState{ after(grammarAccess.getStateEventAccess().getStateStateParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterState__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterStateAccess().getParameterParameterParserRuleCall_0_0()); }
	ruleParameter{ after(grammarAccess.getParameterStateAccess().getParameterParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterState__Parameter_valueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterStateAccess().getParameter_valueAlternatives_2_0()); }
(rule__ParameterState__Parameter_valueAlternatives_2_0)
{ after(grammarAccess.getParameterStateAccess().getParameter_valueAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__SystemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getSystemAlternatives_1_0()); }
(rule__MainFunction__SystemAlternatives_1_0)
{ after(grammarAccess.getMainFunctionAccess().getSystemAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__FunctionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getFunctionActionParserRuleCall_5_0()); }
	ruleAction{ after(grammarAccess.getMainFunctionAccess().getFunctionActionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__SystemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSystemSystemParserRuleCall_1_0()); }
	ruleSystem{ after(grammarAccess.getMainCompositionAccess().getSystemSystemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__SubsystemListAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSubsystemListSystemParserRuleCall_7_0()); }
	ruleSystem{ after(grammarAccess.getMainCompositionAccess().getSubsystemListSystemParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainComposition__SubsystemListAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainCompositionAccess().getSubsystemListSystemParserRuleCall_8_1_0()); }
	ruleSystem{ after(grammarAccess.getMainCompositionAccess().getSubsystemListSystemParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__SystemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getSystemSystemParserRuleCall_1_0()); }
	ruleSystem{ after(grammarAccess.getMainStateTransitionAccess().getSystemSystemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__TransitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getTransitionAlternatives_3_0()); }
(rule__MainStateTransition__TransitionAlternatives_3_0)
{ after(grammarAccess.getMainStateTransitionAccess().getTransitionAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainStateTransition__FunctionAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainStateTransitionAccess().getFunctionActionParserRuleCall_4_1_0()); }
	ruleAction{ after(grammarAccess.getMainStateTransitionAccess().getFunctionActionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__SystemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getSystemSystemParserRuleCall_1_0()); }
	ruleSystem{ after(grammarAccess.getMainAttributesAccess().getSystemSystemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__AttributeListAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getAttributeListAttributeParserRuleCall_6_0()); }
	ruleAttribute{ after(grammarAccess.getMainAttributesAccess().getAttributeListAttributeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainAttributes__AttributeListAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAttributesAccess().getAttributeListAttributeParserRuleCall_7_1_0()); }
	ruleAttribute{ after(grammarAccess.getMainAttributesAccess().getAttributeListAttributeParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__SystemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getSystemSystemParserRuleCall_1_0()); }
	ruleSystem{ after(grammarAccess.getMainFunctionsAccess().getSystemSystemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__FunctionListAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getFunctionListFunctionParserRuleCall_6_0()); }
	ruleFunction{ after(grammarAccess.getMainFunctionsAccess().getFunctionListFunctionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunctions__FunctionListAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionsAccess().getFunctionListFunctionParserRuleCall_7_1_0()); }
	ruleFunction{ after(grammarAccess.getMainFunctionsAccess().getFunctionListFunctionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__OperatorAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getOperatorAlternatives_0()); }
(rule__Operator__OperatorAlternatives_0)
{ after(grammarAccess.getOperatorAccess().getOperatorAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Source_stateAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSource_stateAlternatives_1_1_0()); }
(rule__Transition__Source_stateAlternatives_1_1_0)
{ after(grammarAccess.getTransitionAccess().getSource_stateAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Target_stateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTarget_stateAlternatives_3_0()); }
(rule__Transition__Target_stateAlternatives_3_0)
{ after(grammarAccess.getTransitionAccess().getTarget_stateAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutTransition__Source_stateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutTransitionAccess().getSource_stateAlternatives_1_0()); }
(rule__OutTransition__Source_stateAlternatives_1_0)
{ after(grammarAccess.getOutTransitionAccess().getSource_stateAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoTransition__StateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoTransitionAccess().getStateAlternatives_1_0()); }
(rule__NoTransition__StateAlternatives_1_0)
{ after(grammarAccess.getNoTransitionAccess().getStateAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__SystemAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemSystemKeyword_0_0()); }
(
{ before(grammarAccess.getSystemAccess().getSystemSystemKeyword_0_0()); }

	'system:' 

{ after(grammarAccess.getSystemAccess().getSystemSystemKeyword_0_0()); }
)

{ after(grammarAccess.getSystemAccess().getSystemSystemKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__ActorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorActorKeyword_0_0()); }
(
{ before(grammarAccess.getActorAccess().getActorActorKeyword_0_0()); }

	'actor:' 

{ after(grammarAccess.getActorAccess().getActorActorKeyword_0_0()); }
)

{ after(grammarAccess.getActorAccess().getActorActorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__User__UserAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getUserUserKeyword_0_0()); }
(
{ before(grammarAccess.getUserAccess().getUserUserKeyword_0_0()); }

	'user:' 

{ after(grammarAccess.getUserAccess().getUserUserKeyword_0_0()); }
)

{ after(grammarAccess.getUserAccess().getUserUserKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__User__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionActionKeyword_0_0()); }
(
{ before(grammarAccess.getActionAccess().getActionActionKeyword_0_0()); }

	'action:' 

{ after(grammarAccess.getActionAccess().getActionActionKeyword_0_0()); }
)

{ after(grammarAccess.getActionAccess().getActionActionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParameterAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParameterParameterParserRuleCall_2_0_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParameterParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getValueValueParserRuleCall_2_1_0()); }
	ruleValue{ after(grammarAccess.getActionAccess().getValueValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SubjectAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSubjectAlternatives_4_0()); }
(rule__Action__SubjectAlternatives_4_0)
{ after(grammarAccess.getActionAccess().getSubjectAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__StateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateStateKeyword_0_0()); }
(
{ before(grammarAccess.getStateAccess().getStateStateKeyword_0_0()); }

	'state:' 

{ after(grammarAccess.getStateAccess().getStateStateKeyword_0_0()); }
)

{ after(grammarAccess.getStateAccess().getStateStateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttributeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeAttributeKeyword_0_0()); }
(
{ before(grammarAccess.getAttributeAccess().getAttributeAttributeKeyword_0_0()); }

	'attribute:' 

{ after(grammarAccess.getAttributeAccess().getAttributeAttributeKeyword_0_0()); }
)

{ after(grammarAccess.getAttributeAccess().getAttributeAttributeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getTypeIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunctionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionFunctionKeyword_0_0()); }
(
{ before(grammarAccess.getFunctionAccess().getFunctionFunctionKeyword_0_0()); }

	'function:' 

{ after(grammarAccess.getFunctionAccess().getFunctionFunctionKeyword_0_0()); }
)

{ after(grammarAccess.getFunctionAccess().getFunctionFunctionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getTypeIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterParameterKeyword_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getParameterParameterKeyword_0_0()); }

	'parameter:' 

{ after(grammarAccess.getParameterAccess().getParameterParameterKeyword_0_0()); }
)

{ after(grammarAccess.getParameterAccess().getParameterParameterKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValValueKeyword_0_0()); }
(
{ before(grammarAccess.getValueAccess().getValValueKeyword_0_0()); }

	'value:' 

{ after(grammarAccess.getValueAccess().getValValueKeyword_0_0()); }
)

{ after(grammarAccess.getValueAccess().getValValueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getValueAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeUnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getTimeUnitAlternatives_2_0()); }
(rule__Time__TimeUnitAlternatives_2_0)
{ after(grammarAccess.getTimeAccess().getTimeUnitAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__TimingConstraintAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getTimingConstraintAlternatives_0_0()); }
(rule__TimingConstraint__TimingConstraintAlternatives_0_0)
{ after(grammarAccess.getTimingConstraintAccess().getTimingConstraintAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__MinmaxAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getMinmaxAlternatives_1_0()); }
(rule__TimingConstraint__MinmaxAlternatives_1_0)
{ after(grammarAccess.getTimingConstraintAccess().getMinmaxAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimingConstraint__TimeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingConstraintAccess().getTimeTimeParserRuleCall_2_0()); }
	ruleTime{ after(grammarAccess.getTimingConstraintAccess().getTimeTimeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


